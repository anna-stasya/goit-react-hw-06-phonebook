{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.jsx","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","map","id","name","number","item","tel","btnDel","onClick","Filter","value","onChange","filter","label","text","type","pattern","title","required","input","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","form","preventDefault","btnAdd","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","console","log","setItem","stringify","getFilterVisisbleContacts","normoliseFilter","toLowerCase","contact","includes","getVisisbleContacts","app","сontactsNew","shortid","generate","some","alert","prevState","titleContacts","contactsId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddb0b0ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__9tFx8\",\"label\":\"ContactForm_label__2X8mw\",\"input\":\"ContactForm_input__2T9rM\",\"btnAdd\":\"ContactForm_btnAdd__3lggd\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { useState } from 'react';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  //ввод в интпут\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  //-----------другой вариант записи------------\n  // const handleNameChange = event => {\n  //   setName(event.currentTarget.value);\n  // };\n  // const handleNumberChange = event => {\n  //   setNumber(event.currentTarget.value);\n  // };\n\n  //добавить контакт через кнопку\n  const handleSabmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n\n    //this.resetInput();\n  };\n\n  //   //очистить поля ввода\n  //   resetInput = () => {\n  //     this.setState({ name: '', number: '' });\n  //   };\n\n  return (\n    <form className={s.form} onSubmit={handleSabmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"sabmit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport { ContactForm };\n","//import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n//Components\nimport { ContactList } from './Components/ContactList/ContactList';\nimport { Filter } from './Components/Filter/Filter';\nimport { ContactForm } from './Components/ContactForm/ContactForm';\n//pnotify\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\n\nimport s from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  //-------------------запросы к удаленным ресурсам\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  //---------------------запись в localStorage\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // ----------------------------добавить контакт\n  const forSubmitHandler = text => {\n    //генерация id\n    const сontactsNew = {\n      id: shortid.generate(),\n      ...text,\n    };\n    const someContact = contacts.some(\n      contact => contact.name.toLowerCase() === text.name.toLowerCase(),\n    );\n    if (someContact) {\n      alert(`${text.name} is already in contacts`);\n      return;\n    }\n    //------------------- добавляем новый контакт\n    setContacts(prevState => [сontactsNew, ...prevState]);\n  };\n\n  //-----------------------удалить контакт\n  const deleteContacts = contactsId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactsId),\n    );\n  };\n\n  //------------------------фильтр\n  const changeFilter = event => {\n    return setFilter(event.currentTarget.value);\n  };\n\n  //-----------------поиск по фильтру\n  const getVisisbleContacts = () => {\n    const normoliseFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normoliseFilter),\n    );\n  };\n\n  const getFilterVisisbleContacts = getVisisbleContacts();\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={forSubmitHandler} />\n\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilterVisisbleContacts}\n        onDeleteContacts={deleteContacts}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__j0lBN\",\"item\":\"ContactList_item__1HHdO\",\"name\":\"ContactList_name__Xn2Kn\",\"tel\":\"ContactList_tel__2sz89\",\"btnDel\":\"ContactList_btnDel__JhYN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__nsRTK\",\"label\":\"Filter_label__1xdgL\",\"text\":\"Filter_text__1qtjn\",\"input\":\"Filter_input__1hiJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__B88Bl\",\"title\":\"App_title__3H7LS\",\"titleContacts\":\"App_titleContacts__3thIz\"};"],"sourceRoot":""}